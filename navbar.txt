// src/components/Navbar.jsx
"use client";

import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { User, Briefcase, Award, Book, Menu, X } from 'lucide-react';
import { useRouter } from 'next/navigation'; // Import from 'next/navigation' for app directory

export default function Navbar() {
    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
    const router = useRouter();
    const [activeSection, setActiveSection] = useState('profile');

    useEffect(() => {
        const searchParams = new URLSearchParams(window.location.search);
        setActiveSection(searchParams.get('section') || 'profile');
    }, [router.asPath]);

    const navItems = [
        { id: 'profile', label: 'Profile', icon: User },
        { id: 'experience', label: 'Experience', icon: Briefcase },
        { id: 'skills', label: 'Skills', icon: Award },
        { id: 'personal', label: 'Personal', icon: Book },
    ];

    const toggleMobileMenu = () => {
        setMobileMenuOpen(!mobileMenuOpen);
    };

    const handleNavLinkClick = (id) => {
        router.push(`/?section=${id}`);
        setMobileMenuOpen(false);
    };

    return (
        <div className="bg-white shadow-md py-4 px-6 sticky top-0 z-10">
            <div className="flex justify-between items-center">
                <h1 className="text-2xl font-bold text-dashboard-dark-blue">Personal Dashboard</h1>

                {/* Mobile menu button */}
                <div className="md:hidden">
                    <Button
                        variant="ghost"
                        size="sm"
                        onClick={toggleMobileMenu}
                        aria-label={mobileMenuOpen ? "Close menu" : "Open menu"}
                    >
                        {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}
                    </Button>
                </div>

                {/* Desktop navigation */}
                <div className="hidden md:flex space-x-2">
                    {navItems.map(item => (
                        <Button
                            key={item.id}
                            variant={activeSection === item.id ? "default" : "outline"}
                            size="sm"
                            onClick={() => handleNavLinkClick(item.id)}
                            className={`flex items-center gap-1 ${activeSection === item.id ? "bg-dashboard-blue text-white" : "text-dashboard-dark-blue"
                                }`}
                        >
                            <item.icon size={16} />
                            {item.label}
                        </Button>
                    ))}
                </div>
            </div>

            {/* Mobile navigation */}
            {mobileMenuOpen && (
                <div className="md:hidden mt-4 flex flex-col space-y-2 animate-fade-in">
                    {navItems.map(item => (
                        <Button
                            key={item.id}
                            variant={activeSection === item.id ? "default" : "outline"}
                            size="sm"
                            onClick={() => handleNavLinkClick(item.id)}
                            className={`flex items-center justify-start gap-2 w-full ${activeSection === item.id ? "bg-dashboard-blue text-white" : "text-dashboard-dark-blue"
                                }`}
                        >
                            <item.icon size={16} />
                            {item.label}
                        </Button>
                    ))}
                </div>
            )}
        </div>
    );
}